
import pytesseract
from PIL import Image
from io import BytesIO

# OCR STATES
PHOTO_UPLOAD, PHOTO_CONFIRM = range(10, 12)


async def start_ocr_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å—á—ë—Ç—á–∏–∫–∞ –∫—Ä—É–ø–Ω—ã–º –ø–ª–∞–Ω–æ–º.\n\n"
        "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á—ë—Ç–∫–∏–º, –±–µ–∑ –±–ª–∏–∫–æ–≤ –∏ —Å —á–∏—Ç–∞–µ–º—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏.",
        reply_markup=CANCEL_MARKUP
    )
    return PHOTO_UPLOAD


async def process_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo_file = await update.message.photo[-1].get_file()
    photo_bytes = await photo_file.download_as_bytearray()
    image = Image.open(BytesIO(photo_bytes))

    try:
        text = pytesseract.image_to_string(image, config="--psm 6 digits")
        digits = "".join(filter(str.isdigit, text))
        if not digits:
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ü–∏—Ñ—Ä—ã –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤—Ä—É—á–Ω—É—é.", reply_markup=CANCEL_MARKUP)
            return PHOTO_UPLOAD

        context.user_data["ocr_reading"] = int(digits)
        await update.message.reply_text(
            f"üîç –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: {digits}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?",
            reply_markup=ReplyKeyboardMarkup(
                [['‚úÖ –î–∞', '‚ùå –ù–µ—Ç']], resize_keyboard=True)
        )
        return PHOTO_CONFIRM
    except Exception as e:
        logger.error(f"OCR error: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", reply_markup=CANCEL_MARKUP)
        return PHOTO_UPLOAD


async def confirm_ocr_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "‚úÖ –î–∞":
        reading_value = context.user_data.get("ocr_reading")
        telegram_id = update.effective_user.id
        db.add_reading(telegram_id, reading_value)
        await update.message.reply_text(
            f"‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç—ã: {reading_value}",
            reply_markup=MAIN_MARKUP
        )
    else:
        await update.message.reply_text("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É.", reply_markup=MAIN_MARKUP)

    context.user_data.clear()
    return ConversationHandler.END
