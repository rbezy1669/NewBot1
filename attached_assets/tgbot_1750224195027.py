# Telegram Service Bot with navigation buttons (contact support, submit readings, meter replacement)
# Requires: python-telegram-bot >=20.0
# Install: pip install python-telegram-bot --upgrade

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    ContextTypes,
    filters,
)

BOT_TOKEN = '7807810519:AAFg7_mETm_HTjhzwCvKPhzdZLawytSCtOc'  

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI MARKUPS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
MAIN_KEYBOARD = [
    ['–ó–∞–º–µ–Ω–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤'],
    ['–ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è'],
    ['–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π'],
]
MAIN_MARKUP = ReplyKeyboardMarkup(MAIN_KEYBOARD, resize_keyboard=True)

CANCEL_KEYBOARD = [['–û—Ç–º–µ–Ω–∞']]
CANCEL_MARKUP = ReplyKeyboardMarkup(CANCEL_KEYBOARD, resize_keyboard=True)

# Conversation state
READING = 1

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ HANDLERS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/start command"""
    await update.message.reply_text(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å–ª—É–∂–±—ã —É—á—ë—Ç–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ.',
        reply_markup=MAIN_MARKUP,
    )

async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '–ù–∞–≤–∏–≥–∞—Ü–∏—è:\n'
        '‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã.\n'
        '‚Ä¢ –ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞.\n'
        '‚Ä¢ –ó–∞–º–µ–Ω–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤ ‚Äî —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –∑–∞–º–µ–Ω—É.',
        reply_markup=MAIN_MARKUP,
    )

async def contact_support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏: +372 600‚Äë1234\n'
        'üìß E‚Äëmail: support@example.com\n'
        '‚åö –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 09:00‚Äë17:00 (–ø–Ω‚Äë–ø—Ç)',
        reply_markup=MAIN_MARKUP,
    )

# ‚îÄ‚îÄ ¬´–ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è¬ª conversation ‚îÄ‚îÄ
async def start_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞–º–∏).',
        reply_markup=CANCEL_MARKUP,
    )
    return READING

async def save_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    value = update.message.text.strip()
    if not value.isdigit():
        await update.message.reply_text('‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–º–µ–Ω–∞¬ª.')
        return READING

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ë–î –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ API
    await update.message.reply_text(
        f'‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è ({value}) –ø–µ—Ä–µ–¥–∞–Ω—ã.',
        reply_markup=MAIN_MARKUP,
    )
    return ConversationHandler.END

async def cancel_reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.', reply_markup=MAIN_MARKUP)
    return ConversationHandler.END

async def meter_replacement(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        'üîß –ó–∞–º–µ–Ω–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤:\n'
        '1. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +372 600‚Äë5678, —á—Ç–æ–±—ã —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –¥–∞—Ç—É.\n'
        '2. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø—Ä–∏–µ–¥–µ—Ç –∏ –ø—Ä–æ–∏–∑–≤–µ–¥—ë—Ç –∑–∞–º–µ–Ω—É.\n'
        '3. –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ —Å—á—ë—Ç—á–∏–∫–∞.',
        reply_markup=MAIN_MARKUP,
    )

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ APP INITIALISATION ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # Commands
    app.add_handler(CommandHandler('start', cmd_start))
    app.add_handler(CommandHandler('help', cmd_help))

    # Conversation for readings
    readings_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex('^–ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è$'), start_reading)],
        states={
            READING: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_reading)],
        },
        fallbacks=[MessageHandler(filters.Regex('^–û—Ç–º–µ–Ω–∞$'), cancel_reading)],
    )
    app.add_handler(readings_conv)

    # Other navigation buttons
    app.add_handler(MessageHandler(filters.Regex('^–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π$'), contact_support))
    app.add_handler(MessageHandler(filters.Regex('^–ó–∞–º–µ–Ω–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤$'), meter_replacement))

    # Fallback for unknown text
    async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –Ω–∏–∂–µ.', reply_markup=MAIN_MARKUP)

    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown))

    print('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')
    app.run_polling()